name: "Grove build step"
description: "Builds the Grove analysis backend and Grove frontend"
inputs:
  grove-repo:
    description: "The repository containing the Grove tool (default: TwoFx/grove)"
    required: false
    default: "TwoFx/grove"
  grove-branch:
    description: "The branch of the Grove repository to use"
    required: false
    default: "master"
  project-path:
    description: "Path to the directory containing the analysis script"
    required: true
  script-name:
    description: "Name of the script to execute with lake exe (default: grove)"
    required: false
    default: "grove"
  frontend-artifact-name:
    description: "Name of the artifact containing the generated HTML report"
    required: false
    default: "grove-frontend"
  invalidated-facts-artifact-name:
    description: "Name of the artifact containing the invalidated facts"
    required: false
    default: "invalidated-facts"

outputs:
  out-path:
    description: "Path to the generated HTML report directory"
    value: ${{ github.workspace }}/grove-repo/frontend/out

runs:
  using: "composite"
  steps:
    - name: Install Elan
      shell: bash
      run: |
        curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- -y --default-toolchain none
        echo "$HOME/.elan/bin" >> $GITHUB_PATH

    - name: Checkout user repository
      uses: actions/checkout@v4
      with:
        path: user-repo

    - name: Checkout Grove
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.grove-repo }}
        ref: ${{ inputs.grove-branch }}
        path: grove-repo

    - name: Run analysis
      shell: bash
      working-directory: user-repo/${{ inputs.project-path }}
      run: |
        lake exe ${{ inputs.script-name }} --full analysis.json --invalidated invalidated.json

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "22"

    - name: Install dependencies
      shell: bash
      working-directory: grove-repo/frontend
      run: npm install

    - name: Download upstream invalidated facts
      uses: actions/download-artifact@v4
      id: download-upstream
      continue-on-error: true
      with:
        name: upstream-${{ inputs.invalidated-facts-artifact-name }}
        path: ${{ github.workspace }}/upstream-invalidated

    - name: Build Grove frontend
      shell: bash
      working-directory: grove-repo/frontend
      env:
        GROVE_DATA_LOCATION: ${{ github.workspace }}/user-repo/${{ inputs.project-path }}/analysis.json
        GROVE_UPSTREAM_INVALIDATED_FACTS_LOCATION: ${{ steps.download-upstream.outcome == 'success' && format('{0}/upstream-invalidated/invalidated.json', github.workspace) || '' }}
      run: npm run build

    - name: Upload Grove frontend
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.frontend-artifact-name }}
        path: grove-repo/frontend/out

    - name: Upload invalidated facts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.invalidated-facts-artifact-name }}
        path: ${{ github.workspace }}/user-repo/${{ inputs.project-path }}/invalidated.json
